{"version":3,"sources":["pages/SigninPage/actions.js","utils/constants.js","components/sign-in/index.jsx","pages/SigninPage/index.js","components/ChatUI/index.js","pages/HomePage/actions.js","components/Input/index.js","pages/HomePage/index.js","components/AuthRoute/index.js","components/NavigationBar/actions.js","components/NavigationBar/index.js","reducers/user-state.js","reducers/message-state.js","reducers/index.js","store.js","index.js"],"names":["signInUserSuccess","type","payload","email","reducer","state","action","key","value","errorMsg","Error","SignIn","props","useReducer","password","dispatcher","history","userEmail","useEffect","push","handleChange","event","target","name","className","onSubmit","preventDefault","label","onChange","e","required","length","withRouter","connect","userState","get","dispatch","bindActionCreators","ChatUI","serverMessages","clientMessages","Fragment","map","serverMessage","index","Toast","show","style","width","Body","marginLeft","defaultProps","sendMessageToBot","message","sendClientMessage","Input","placeholder","disabled","restProps","FormControl","messageState","useState","setMessage","websocket","useRef","current","WebSocket","onopen","evt","console","log","onclose","handleClick","send","doSend","chatBox","document","getElementById","scrollTop","scrollHeight","offsetHeight","Col","Card","display","flexDirection","height","top","id","color","flexBasis","maxHeight","overflowY","padding","ev","onKeyPress","Button","variant","onClick","Comp","component","to","pathname","logout","NavigationBarComponent","location","Navbar","collapseOnSelect","expand","Link","as","initialState","user","combineReducers","middlewares","thunkMiddleware","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","store","basename","NavigationBar","exact","path","SignInPage","HomePage"],"mappings":"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","file":"static/js/main.9bba9c83.chunk.js","sourcesContent":["import { SIGNIN_USER_SUCCESS } from '../../utils/constants';\n\nexport const signInUserSuccess = ({ email }) => ({\n  type: SIGNIN_USER_SUCCESS,\n  payload: { email }\n});\n","export const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\n\nexport const SIGNIN_USER_SUCCESS = 'SIGNIN_USER_SUCCESS';\n\nexport const SEND_MESSAGE_REMOTE_SUCCESS = 'SEND_MESSAGE_REMOTE_SUCCESS';\nexport const SEND_MESSAGE_CLIENT_SUCCESS = 'SEND_MESSAGE_CLIENT_SUCCESS';\n","import React, { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './sign-in.styles.scss';\n\nconst reducer = (state = {}, action) => {\n  const { key, value, type } = action;\n  switch (type) {\n    case 'inputChange':\n      return { ...state, [key]: value };\n    case 'setError':\n      return { ...state, errorMsg: value };\n    default:\n      throw new Error();\n  }\n};\n\nconst SignIn = (props) => {\n  const [state, dispatcher] = useReducer(reducer, { email: '', password: '' });\n  const { history, userEmail } = props;\n  useEffect(() => {\n    if (userEmail) {\n      history.push('/home');\n    }\n  }, [userEmail, history]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = state;\n    if (email === 'test@gmail.com' && password === 'test') {\n      props.signInUserSuccess({ email });\n    } else {\n      dispatcher({ value: 'Password or User Name is incorrect!', type: 'setError' });\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name: key } = event.target;\n    dispatcher({ key, value, type: 'inputChange' });\n  };\n\n  const { errorMsg, password, email } = state;\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in-container\">\n        <h3 className=\"title\">Sign in with your email and password</h3>\n        <h5 className=\"error-text\">{errorMsg}</h5>\n        <form onSubmit={handleSubmit}>\n          <div className=\"group\">\n            <input\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={e => handleChange(e)}\n              required\n              className=\"form-input\"\n            />\n            <label className={`${email.length ? 'shrink' : ''} form-input-label`}>Email</label>\n          </div>\n\n          <div className=\"group\">\n            <input\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={e => handleChange(e)}\n              className=\"form-input\"\n              required\n            />\n\n            <label className={`${password.length ? 'shrink' : ''} form-input-label`}>Password</label>\n          </div>\n\n          <div className=\"buttons\">\n            <button type=\"submit\">Sign in</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nSignIn.propTypes = {\n  signInUserSuccess: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired,\n  history: PropTypes.shape({}).isRequired\n};\nexport default SignIn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport get from 'lodash/get';\nimport { signInUserSuccess } from './actions';\n\nimport './signinpage.scss';\n\nimport SignIn from '../../components/sign-in';\n\nconst SigninPage = ({ ...props }) => (\n  <div className=\"homepage\">\n    <div className=\"intro-text\">\n      <h2 className=\"main-text\">BUDDY</h2>\n      <h4 className=\"sub-text\">Just another chatbot!</h4>\n    </div>\n    <SignIn className=\"sign-in\" {...props} />\n  </div>\n);\n\nSigninPage.propTypes = {\n  history: PropTypes.shape({}).isRequired,\n  signInUserSuccess: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = ({ userState }) => {\n  return {\n    userEmail: get(userState, 'user.email', '')\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signInUserSuccess: bindActionCreators(signInUserSuccess, dispatch)\n  };\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SigninPage));\n","import React from 'react';\nimport { Toast } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst ChatUI = ({ serverMessages, clientMessages }) => {\n  return (\n    <React.Fragment>\n      {serverMessages.map((serverMessage, index) => (\n        <React.Fragment>\n          <span>You: </span>\n          <Toast show style={{ width: '50%' }}>\n            <Toast.Body>{clientMessages[index]}</Toast.Body>\n          </Toast>\n          <span style={{ width: '50%', marginLeft: '55%' }}>Bot: </span>\n          <Toast show style={{ width: '50%', marginLeft: '55%' }}>\n            <Toast.Body>{serverMessage}</Toast.Body>\n          </Toast>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nChatUI.propTypes = {\n  serverMessages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  clientMessages: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nChatUI.defaultProps = {};\n\nexport default ChatUI;\n","import { SEND_MESSAGE_REMOTE_SUCCESS, SEND_MESSAGE_CLIENT_SUCCESS } from '../../utils/constants';\n\nexport const onOpen = () => {\n  // doSend(\"WebSocket rocks\");\n  console.log('connected');\n};\n\nexport const onClose = () => {};\n\n// export const onMessage = () => {\n//   // websocket.close();\n// };\n\n// export const onError = () => {\n// };\n\nexport const doSend = (message, websocket, sendMessageToBot) => {\n  websocket.send(message);\n  sendMessageToBot({ message });\n};\n\nexport const sendMessageToBot = ({ message }) => ({\n  type: SEND_MESSAGE_REMOTE_SUCCESS,\n  payload: { message }\n});\nexport const sendClientMessage = ({ message }) => ({\n  type: SEND_MESSAGE_CLIENT_SUCCESS,\n  payload: { message }\n});\n","import React from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport './input.scss';\n\nconst Input = ({\n  placeholder, disabled, value, ...restProps\n}) => {\n  const blockName = 'input-container';\n\n  return (\n    <React.Fragment>\n      <FormControl\n        className={blockName}\n        disabled={disabled}\n        placeholder={placeholder}\n        value={value}\n        type=\"text\"\n        {...restProps}\n      />\n    </React.Fragment>\n  );\n};\n\nInput.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  disabled: PropTypes.bool\n};\n\nInput.defaultProps = {\n  placeholder: '',\n  disabled: false,\n  value: ''\n};\n\nexport default Input;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, Col } from 'react-bootstrap';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport ChatUI from '../../components/ChatUI';\nimport { sendMessageToBot, onOpen, onClose, doSend, sendClientMessage } from './actions';\nimport Input from '../../components/Input';\n\nimport './home-page.scss';\n\nconst wsUri = 'wss://echo.websocket.org/';\n\nconst HomePage = ({ serverMessages, clientMessages, ...props }) => {\n  const [message, setMessage] = useState('');\n\n  const websocket = useRef();\n\n  useEffect(() => {\n    websocket.current = new WebSocket(wsUri);\n    websocket.current.onopen = function (evt) {\n      onOpen(evt, websocket.current);\n    };\n    websocket.current.onclose = function (evt) {\n      onClose(evt);\n    };\n  }, []);\n\n  const handleClick = () => {\n    props.sendClientMessage({ message });\n    doSend(message, websocket.current, props.sendMessageToBot);\n    const chatBox = document.getElementById('chat-container');\n    chatBox.scrollTop = chatBox.scrollHeight + chatBox.offsetHeight;\n    setMessage('');\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleClick();\n    }\n  };\n\n  return (\n    <Col className=\"homepage\">\n      <Card\n        style={{\n          width: '60vw',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '80%',\n          top: '10%'\n        }}\n      >\n        <Card.Body\n          id=\"chat-container\"\n          style={{\n            color: 'black',\n            flexBasis: '88%',\n            maxHeight: '70vh',\n            overflowY: 'auto'\n          }}\n        >\n          <ChatUI clientMessages={clientMessages} serverMessages={serverMessages} />\n        </Card.Body>\n        <Col\n          style={{\n            color: 'black',\n            flexBasis: '12%',\n            flexDirection: 'row',\n            display: 'flex',\n            padding: '1rem 1rem'\n          }}\n        >\n          <Input\n            style={{ flexBasis: '70%', height: '100%' }}\n            value={message}\n            onChange={ev => setMessage(ev.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type here and press Enter\"\n          />\n          <Button style={{ flexBasis: '30%' }} variant=\"primary\" onClick={handleClick}>\n            Send\n          </Button>\n        </Col>\n      </Card>\n    </Col>\n  );\n};\n\nHomePage.propTypes = {\n  serverMessages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  clientMessages: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sendMessageToBot: PropTypes.func.isRequired,\n  sendClientMessage: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = ({ messageState }) => {\n  const { serverMessages, clientMessages } = messageState;\n  return {\n    serverMessages,\n    clientMessages\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessageToBot: bindActionCreators(sendMessageToBot, dispatch),\n    sendClientMessage: bindActionCreators(sendClientMessage, dispatch)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nconst AuthRoute = (props) => {\n  const { userEmail } = props;\n\n  if (userEmail) {\n    const Comp = props.component;\n    return <Comp {...props} />;\n  }\n  return <Redirect to={{ pathname: '/' }} />;\n};\n\nAuthRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  userEmail: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = ({ userState }) => {\n  return {\n    userEmail: get(userState, 'user.email', null)\n  };\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {}\n)(AuthRoute));\n","import { LOGOUT_USER_SUCCESS } from '../../utils/constants';\n\n/*eslint-disable*/\n\nexport const logout = () => ({\n  type: LOGOUT_USER_SUCCESS,\n});","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { bindActionCreators } from 'redux';\nimport { Navbar } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { logout } from './actions';\nimport './navigation.scss';\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nconst NavigationBarComponent = ({ ...props }) => {\n  const handleClick = () => {\n    props.logout();\n  };\n  const { pathname } = props.location;\n  if (pathname === '/') return null;\n  return (\n    <Navbar\n      className=\"navigation-container\"\n      collapseOnSelect\n      expand=\"lg\"\n      variant=\"light\"\n      style={{ padding: '.5rem 1.5rem .5rem 1.5rem' }}\n    >\n      <Nav.Link onClick={handleClick} as=\"div\" className=\"right-side-navigation_navlink\">\n        Sign out\n      </Nav.Link>\n    </Navbar>\n  );\n};\n\nNavigationBarComponent.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }),\n  logout: PropTypes.func.isRequired\n};\n\nNavigationBarComponent.defaultProps = {\n  location: {\n    pathname: ''\n  },\n  history: {}\n};\n\nconst mapStateToProps = () => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: bindActionCreators(logout, dispatch)\n  };\n};\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavigationBarComponent));\n","import { SIGNIN_USER_SUCCESS, LOGOUT_USER_SUCCESS } from '../utils/constants';\n\nconst initialState = {\n  user: null\n};\n\nconst userState = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNIN_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload\n      };\n\n    case LOGOUT_USER_SUCCESS:\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport default userState;\n","import { SEND_MESSAGE_REMOTE_SUCCESS, SEND_MESSAGE_CLIENT_SUCCESS } from '../utils/constants';\n\nconst initialState = {\n  serverMessages: [],\n  clientMessages: []\n};\n\nconst messageState = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE_REMOTE_SUCCESS:\n      return {\n        ...state,\n        serverMessages: [...state.serverMessages, action.payload.message]\n      };\n    case SEND_MESSAGE_CLIENT_SUCCESS:\n      return {\n        ...state,\n        clientMessages: [...state.clientMessages, action.payload.message]\n      };\n    default:\n      return state;\n  }\n};\nexport default messageState;\n","import { combineReducers } from 'redux';\nimport userState from './user-state';\nimport messageState from './message-state';\n\nexport default combineReducers({\n  userState,\n  messageState\n});\n","import thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst middlewares = [thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  const loggerMiddleware = createLogger();\n  middlewares.push(loggerMiddleware);\n}\n\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\n","import React from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport SignInPage from './pages/SigninPage';\nimport HomePage from './pages/HomePage';\nimport AuthenticatedRoute from './components/AuthRoute';\nimport NavigationBar from './components/NavigationBar';\nimport store from './store';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <HashRouter basename=\"/\">\n        <React.Fragment>\n          <NavigationBar />\n          <Switch>\n            <Route exact path=\"/\" component={SignInPage} />\n            <AuthenticatedRoute exact path=\"/home\" component={HomePage} />\n          </Switch>\n        </React.Fragment>\n      </HashRouter>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}